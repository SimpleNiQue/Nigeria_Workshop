install.packages(c("sf", "raster", "units", "tidyverse", "tmap", "rstan", "ggdag", "plotly", "RColorBrewer", "kableExtra", "here", "parallel"))
path <- "C:/Users/SimpleNick/Documents/NPC/NIG_POP_Workshop/Nig_POP/Day\ 2"
setwd(path)
getwd()
##----Simple regression
#-- Load data
simple <- read.csv("simple_reg.csv")
names(simple)
head(simple)
head(simple, 20)
library(psych)
headTail(simple) # view both first 4 and last 4 rows
# # install required packages
# installed.packages("ggdag")
# installed.packages("plotly")
# installed.packages("RColorBrewer")
# installed.packages("kableExtra")
# installed.packages("here")
# installed.packages("parallel")
# installed.packages("sf")
# installed.packages("raster")
# installed.packages("units")
# installed.packages("tidyverse")
# installed.packages("tmap")
# installed.packages("rstan")
png("simple_scatter.png")
plot(simple$income, simple$happiness,
xlab = "Income", ylab = "Happiness",
col = c("goldenrod", "purple"),
pch = "0")
abline(a = 0, b = 1, lwd = 3.5)
abline(v = 4)
##----Check for linearity and Normality
with(simple, plot(happiness ~ income))
hist(simple$happiness)
###
fit <- lm(happiness ~ income, data = simple)
summary(fit)
plot(fit)
#--: happiness = 0.204 + 0.713*income
png("simple_histogram_both.png")
par(mfrow = c(1, 2))
hist(simple$happiness, xlab = "Happiness", col = c("goldenrod"), main = "")
abline(a = 0, b = 1)
abline(v = 3.5, h = 30, lwd = 2.5)
hist(simple$happiness, xlab="Income", col = c("purple"))
abline(a = 0, b = 1)
abline(v = 3.5, h = 30, lwd = 2.5)
hist(simple$happiness, xlab="Income", col = c("purple"))
abline(a = 0, b = 1)
abline(v = mean(simple$happiness), lwd = 2.5, col = c("white"))
abline(h = 30, lwd = 2.5, col = c("red"))
# check for normality
par(mfrow = c(1, 2))
# par(mfrow = (c(2, 1)))
hist(simple$happiness, main = "")
hist(simple$income, main = "")
# Regression Model Equation
# Nominal:
# Happiness = intercept + income # nolint
# intercept is the minium happiness someone can have
plot(fit_b)
fit <- lm(happiness ~ income, data = simple)
summary(fit)
plot(fit)
plot(fit)
install.packages("plotly")
install.packages("plotly")
egression
fit <- lm(happiness ~ income, data = simple)
summary(fit)
plot(fit)
